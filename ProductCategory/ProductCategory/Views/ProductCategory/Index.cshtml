@using ProductCategory.Domain.Entities;
@{
    ViewData["Title"] = "Category";
}

@model IEnumerable<ProductCategory.Domain.Entities.ProductCategoryEntity>

<h1>Category</h1>

<div class="container mt-5">

    <form id="dataForm" method="post" class="needs-validation" novalidate>
        <div class="form-group mb-1">
            <label for="name">Name:</label>
            <input name="Name" type="text" class="form-control"
                   id="name" required>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Please provide a valid name.
            </div>
        </div>
        <div class="form-group mb-1">
            <label for="description">Description:</label>
            <input name="Description" class="form-control"
                   type="text"   id="description" required/>
            <div class="valid-feedback">
                Looks good!
            </div>
            <div class="invalid-feedback">
                Please provide a valid description.
            </div>
        </div>
        <button id="createFile" type="submit" onclick="CreateCategory()" class="btn btn-primary">Submit</button>
    </form>

    <h2 class="mt-5">Category Table</h2>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody id="dataTableBody">
            @foreach (var category in Model)
            {
                <tr>
                    <td>
                        <input type="text" name="name" id="changeName @category.Name" value="@category.Name" />
                    </td>
                    <td>
                        <input type="text" name="category" id="changeDescription @category.Name" value="@category.Description" />
                    </td>
                    <td>
                        <button class="btn btn-warning" onclick="changeData(@category.Id, '@category.Name')">Edit</button>
                        <button class="btn btn-danger" onclick="deleteData('@category.Id')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts
{
    <script>

        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')

            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        function changeData(id, name){
            var final_name = document.getElementById("changeName " + name).value;
            var description = document.getElementById("changeDescription " + name).value;
            $.ajax({
                type: 'PUT',
                url: '@Url.Action("ChangeCategory", "ProductCategory")',
                data: { id: id, description: description, name: final_name },
                success: function (response) {
                    alert(response.description);
                },
                error: function (response) {
                    alert(response.responseJSON.description);
                }
            })
        }

        $("#dataForm").submit(function (e) {
            e.preventDefault();
        });

        function CreateCategory() {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateCategory", "ProductCategory")',
                data: $('#dataForm').serialize(),
                success: function (response) {
                    alert(response.description);
                },
                error: function (response) {
                    alert(response.responseJSON.description);
                }
            })
        };

        function deleteData(Id) {
            $.ajax({
                type: 'DELETE',
                url: '@Url.Action("DeleteCategory", "ProductCategory")',
                data: { Id: Id },
                success: function (response) {
                    alert(response.description);
                },
                error: function (response) {
                    alert(response.responseJSON.description);
                }
            })
        }
    </script>
}
